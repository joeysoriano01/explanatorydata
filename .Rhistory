q()
q()
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./data/quiz1.csv", method = "curl")
list.file("./data")
list.files("./data")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./data/getdata_data_ss06hid.csv", method = "curl")
fileUrl <- "https://d396qusza40orc.cloudfront.net"
download.file(fileUrl, destfile = "./data/getdata_data_ss06hid.csv", method = "curl")
list.files("./data")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./Coursera/sample.csv", method = "curl")
library(xlsx)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
q()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
q()
xyplot(x ~ y | f * g, data)
library(lattice)
library(datasets)
xyplot(Ozone ~ Wind, data = airquality)
library(datasets)
library(lattice)
airquality <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
p <- xyplot(Ozone ~ Wind, data = airquality)
print (p)
set.seed(10)
x <- rnom(100)
x <- rnorm(100)
f <- rep(0:1, each = 50) y <- x + f - f * x + rnorm(100, sd = 0.5) f <- factor(f, labels = c("Group 1", "Group 2")) xyplot(y ~ x | f, layout = c(2, 1)) 
f <- rep(0:1, each = 50)
f <- factor(f, labels = c("Group 1", "Group 2"))
f <- rep(0:1, each = 50) y <- x + f - f * x + rnorm(100, sd = 0.5) f <- factor(f, labels = c("Group 1", "Group 2")) xyplot(y ~ x | f, layout = c(2, 1)) 
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c("Group 1", "Group 2")) 
xyplot(y ~ x | f, layout = c(2, 1))
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
 panel.abline(h = median(y), lty = 2)
})
xyplot(y ~ x | f, panel = function(x, y, ...) {
 panel.xyplot(x, y, ...)
panel.lmline(x, y, col = 2)
})
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(lattice)
library(datasets)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print (p)
library(datasets)
data(airquality)
library("ggplot2.package")
library("ggplot2")
library(ggplot2)
q()
library(swirl)
swirl()
0
swirl()
q()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
install_from_swirl("Exploratory Data Analysis")
q()
libary(swirl)
library(swirl)
swirl()
?read.csv
mydf <- read.csv(path2csv, stringAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
select(cran, country:r_arch)
cran
select(cran, -time)
select(cran, X:size, -time)
select(cran, -5:20)
select(cran, X:size, -5:20)
-5:20
(-5:20)
-(5:20)
select(X:size)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, asc(country), desc(r_version), asc(ip_id))
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 100)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_byte = mean(size))
summarize(cran, avg_bytes = mean(size))
q()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
q()
library(swirl)
swirl()
swirl()
2
swirl()
head(pollution)
dim(pollution)
pollution$pm25
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, color = "blue")
boxplot(ppm, col = "blue")
abline(h=12)
abline(h = 12)
abline(h = 12)
omnitest(correctExpr='abline(h = 12)')
abline(h = 12)
abline(h = h)
q()
library(swirl)
swirl()
abline(h = 12)
plot.new(abline(h = 12))
int_abline(h = 12)
abline(h = 12)
plot.new
abline(h = 12)
abline(h = 12)
info()
skip()
swirl()
abline(h = 12)
info()
skip()
swirl()
abline(h = 12, lwd = 2, lty = 2)
0
abline(h = 12)
0
info()
skip()
swirl()
?Devices
plot(eruptions ~ waiting)
with(faithful, plot(eruptions, waiting))
annotation("Old Faithful Geyser data")
title(main = "Old Faithful Geyser data")
info()
skip()
0
q()
library(swirl)
swirl()
3
swirl()
q()
library(swirl)
swirl()
utils:::menuInstallPkgs()
swirl()
swirl()
q()
source("plot4.R")
source("plot4.R")
source("plot3.R")
source("plot5.R")
source("plot6.R")
source("plot1.R")
source("plot2.R")
source("plot2.R")
q()
